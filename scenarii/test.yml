scenarii:
  params:
    blocksize:
      type: "int"
      range: [256, 512]
      # first, last, step
      # TODO: implement this
      #for: [256, 512, 256]
    # We may want to express [(1,2), (2,1)] and use 'init_core[0]'/'init_core[1]'
    #init_core: [1, 2]
  data:
    default_blocksize:
      type: "int"
      value: 4096
    a:
      #array: 12  #tableau de 12 double*
      type: "double*"
    b:
      type: "double*"
    c:
      type: "double*"
    aa:
      type: "double*"
    bb:
      type: "double*"
    cc:
      type: "double*"
  actions:
    # Idée de scenario : exec sur core i, init sur core i+12
    # triad, axpy, copy (stream) dans tout les sens
    # trsm: lecture 0 tout le monde lis
    # gemm tous local, saturer, puis saturer avec tous pas local
    # expérience simple du gemm tout bête
    # scaler avec la machine...
    #- repeat_actions:
      #- params:
        #core: [0, 12]
      #- action: "init_array"
        #params: ["a"]
        #core: "core"
      #- action: "dgemm"
        #params: ["a"]
        #core: "core"
    - kernel: "init_blas_bloc"
      params: ["a", "default_blocksize"]
      core: 1
    - kernel: "init_blas_bloc"
      params: ["b", "default_blocksize"]
      core: 1
    - kernel: "init_blas_bloc"
      params: ["c", "default_blocksize"]
      core: 1
    - kernel: "init_blas_bloc"
      params: ["aa", "default_blocksize"]
      core: 5
    - kernel: "init_blas_bloc"
      params: ["bb", "default_blocksize"]
      core: 5
    - kernel: "init_blas_bloc"
      params: ["cc", "default_blocksize"]
      core: 5
    - sync
    - kernel: "dgemm"
      params: ["a", "b", "c", "default_blocksize"]
      core: 1
      repeat: 2
      flush: true
      sync: true
    - kernel: "dgemm"
      params: ["aa", "bb", "cc", "default_blocksize"]
      core: 5
      repeat: 2
      flush: true
      sync: true
